/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PostsRouteImport } from './routes/posts'
import { Route as ObservacionesRouteImport } from './routes/observaciones'
import { Route as InstruccionesRouteImport } from './routes/instrucciones'
import { Route as AjustesRouteImport } from './routes/ajustes'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const PostsRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const ObservacionesRoute = ObservacionesRouteImport.update({
  id: '/observaciones',
  path: '/observaciones',
  getParentRoute: () => rootRouteImport,
} as any)
const InstruccionesRoute = InstruccionesRouteImport.update({
  id: '/instrucciones',
  path: '/instrucciones',
  getParentRoute: () => rootRouteImport,
} as any)
const AjustesRoute = AjustesRouteImport.update({
  id: '/ajustes',
  path: '/ajustes',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ajustes': typeof AjustesRoute
  '/instrucciones': typeof InstruccionesRoute
  '/observaciones': typeof ObservacionesRoute
  '/posts': typeof PostsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ajustes': typeof AjustesRoute
  '/instrucciones': typeof InstruccionesRoute
  '/observaciones': typeof ObservacionesRoute
  '/posts': typeof PostsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ajustes': typeof AjustesRoute
  '/instrucciones': typeof InstruccionesRoute
  '/observaciones': typeof ObservacionesRoute
  '/posts': typeof PostsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/ajustes'
    | '/instrucciones'
    | '/observaciones'
    | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/ajustes'
    | '/instrucciones'
    | '/observaciones'
    | '/posts'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/ajustes'
    | '/instrucciones'
    | '/observaciones'
    | '/posts'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AjustesRoute: typeof AjustesRoute
  InstruccionesRoute: typeof InstruccionesRoute
  ObservacionesRoute: typeof ObservacionesRoute
  PostsRoute: typeof PostsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/observaciones': {
      id: '/observaciones'
      path: '/observaciones'
      fullPath: '/observaciones'
      preLoaderRoute: typeof ObservacionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/instrucciones': {
      id: '/instrucciones'
      path: '/instrucciones'
      fullPath: '/instrucciones'
      preLoaderRoute: typeof InstruccionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ajustes': {
      id: '/ajustes'
      path: '/ajustes'
      fullPath: '/ajustes'
      preLoaderRoute: typeof AjustesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AjustesRoute: AjustesRoute,
  InstruccionesRoute: InstruccionesRoute,
  ObservacionesRoute: ObservacionesRoute,
  PostsRoute: PostsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
