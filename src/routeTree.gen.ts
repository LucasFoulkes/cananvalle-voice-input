/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PinchesRouteImport } from './routes/pinches'
import { Route as ObservacionesRouteImport } from './routes/observaciones'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ControlCalidadRouteImport } from './routes/control-calidad'
import { Route as IndexRouteImport } from './routes/index'

const PinchesRoute = PinchesRouteImport.update({
  id: '/pinches',
  path: '/pinches',
  getParentRoute: () => rootRouteImport,
} as any)
const ObservacionesRoute = ObservacionesRouteImport.update({
  id: '/observaciones',
  path: '/observaciones',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ControlCalidadRoute = ControlCalidadRouteImport.update({
  id: '/control-calidad',
  path: '/control-calidad',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/control-calidad': typeof ControlCalidadRoute
  '/login': typeof LoginRoute
  '/observaciones': typeof ObservacionesRoute
  '/pinches': typeof PinchesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/control-calidad': typeof ControlCalidadRoute
  '/login': typeof LoginRoute
  '/observaciones': typeof ObservacionesRoute
  '/pinches': typeof PinchesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/control-calidad': typeof ControlCalidadRoute
  '/login': typeof LoginRoute
  '/observaciones': typeof ObservacionesRoute
  '/pinches': typeof PinchesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/control-calidad' | '/login' | '/observaciones' | '/pinches'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/control-calidad' | '/login' | '/observaciones' | '/pinches'
  id:
    | '__root__'
    | '/'
    | '/control-calidad'
    | '/login'
    | '/observaciones'
    | '/pinches'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ControlCalidadRoute: typeof ControlCalidadRoute
  LoginRoute: typeof LoginRoute
  ObservacionesRoute: typeof ObservacionesRoute
  PinchesRoute: typeof PinchesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/pinches': {
      id: '/pinches'
      path: '/pinches'
      fullPath: '/pinches'
      preLoaderRoute: typeof PinchesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/observaciones': {
      id: '/observaciones'
      path: '/observaciones'
      fullPath: '/observaciones'
      preLoaderRoute: typeof ObservacionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/control-calidad': {
      id: '/control-calidad'
      path: '/control-calidad'
      fullPath: '/control-calidad'
      preLoaderRoute: typeof ControlCalidadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ControlCalidadRoute: ControlCalidadRoute,
  LoginRoute: LoginRoute,
  ObservacionesRoute: ObservacionesRoute,
  PinchesRoute: PinchesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
